"""
Django settings for drf_chat project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-=*2-%vacc3_%h6z^cnv8lv-wx(d0k%#3k*dj6#=7@xs3il1pnz"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Built-in
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Local
    "core",

    # Third-party
    # 'django.contrib.sites',
    'rest_framework',
    # 'rest_framework.authtoken',
    # 'dj_rest_auth',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.google',
    # 'dj_rest_auth.registration',
    # 'phonenumber_field',
    # 'corsheaders',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "drf_chat.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "drf_chat.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Custom user model

AUTH_USER_MODEL = "core.User"

LOGIN_URL = '/login/'


# REST Framework

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

# CORS_ORIGIN_ALLOW_ALL = True
#
# # Authentication
# AUTHENTICATION_BACKENDS = [
#     'users.backends.phone_backend.PhoneNumberAuthBackend',
#     'users.backends.email_backend.EmailAuthBackend',
# ]
#
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
#     ),
# }
#
# SITE_ID = 1
#
# REST_USE_JWT = True
#
# JWT_AUTH_COOKIE = 'phonenumber-auth'
# JWT_AUTH_REFRESH_COOKIE = 'phonenumber-refresh-token'
#
# # ACCOUNT_EMAIL_VERIFICATION SETTINGS
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_UNIQUE_EMAIL = True
# ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
#
#
# # Email
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# EMAIL_HOST_USER = config('EMAIL_USER')
# EMAIL_HOST_PASSWORD = config('EMAIL_PASSWORD')
#
# # Phone number field
# PHONENUMBER_DEFAULT_REGION = 'ET'
#
# # Token length for OTP
# TOKEN_LENGTH = 6
#
# # Token expiry
# TOKEN_EXPIRE_MINUTES = 3
#
# # Twilio
# TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID')
# TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN')
# TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER')


# Logging

# LOGGING = values.DictValue({
#         'version': 1,
#         'disable_existing_loggers': False,
#         'formatters': {
#             'verbose': {
#                 'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#                 'style': '{',
#             },
#             'simple': {
#                 'format': '{levelname} {message}',
#                 'style': '{',
#             },
#         },
#         'filters': {
#             'require_debug_true': {
#                 '()': 'django.utils.log.RequireDebugTrue',
#             }
#         },
#         'handlers': {
#             'console': {
#                 'level': 'INFO',
#                 'filters': ['require_debug_true'],
#                 'class': 'logging.StreamHandler',
#                 'formatter': 'verbose'
#             },
#             'mail_admins': {
#                 'level': 'ERROR',
#                 'class': 'django.utils.log.AdminEmailHandler',
#             }
#         },
#         'loggers': {
#             'django': {
#                 'handlers': ['console'],
#                 'propagate': True,
#                 'level': 'INFO'
#             },
#             'django.request': {
#                 'handlers': ['mail_admins'],
#                 'level': 'ERROR',
#                 'propagate': True,
#             },
#             'achare': {
#                 'handlers': ['console'],
#                 'level': 'DEBUG',
#                 'propagate': True,
#             }
#         }
#     })
#
#     REST_FRAMEWORK = {
#         'DEFAULT_VERSION': 'v1',
#         'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
#         'EXCEPTION_HANDLER': 'project.apps.api.views.api_exception_handler',
#         # 'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.IsAuthenticated', ],
#         'DEFAULT_PERMISSION_CLASSES': ['project.apps.api.permissions.IsRegistered', ],
#         'DEFAULT_AUTHENTICATION_CLASSES': [
#             'rest_framework_simplejwt.authentication.JWTAuthentication',
#         ]
#     }
#
#     SIMPLE_JWT = {
#         'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
#         'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
#         'ROTATE_REFRESH_TOKENS': False,
#         'BLACKLIST_AFTER_ROTATION': True,
#
#         # 'ALGORITHM': 'HS256',
#         # 'SIGNING_KEY': SECRET_KEY,
#         # 'VERIFYING_KEY': None,
#
#         'AUTH_HEADER_TYPES': ('Bearer',),
#         'USER_ID_FIELD': 'id',
#         'USER_ID_CLAIM': 'user_id',
#
#         'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#         'TOKEN_TYPE_CLAIM': 'token_type',
#
#         # 'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
#         # 'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
#         # 'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
#     }
#
#     # membership and registration settings
#     REGISTRATION_PIN_EXPIRATION_MINUTES = values.IntegerValue(5, environ_prefix='ACHARE')
#
#     VALID_MOBILE_COUNTRY_CODES = values.ListValue(['98'], environ_prefix='ACHARE')
#
#     REGISTRATION_SEND_SMS_INTERVAL = values.IntegerValue(120, environ_prefix='ACHARE')
#
#     REGISTER_ATTEMPTS_LIMIT = values.IntegerValue(3, environ_prefix='ACHARE')
#
#     VERIFY_ATTEMPTS_LIMIT = values.IntegerValue(10, environ_prefix='ACHARE')
#
#     REGISTRATION_BAN_MINUTES = values.IntegerValue(30, environ_prefix='ACHARE')